// <auto-generated />
using System;
using FacturacionLabco.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FacturacionLabco.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20241008210627_Vehiculo")]
    partial class Vehiculo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FacturacionLabco.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Detalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<int>("IDServicio")
                        .HasColumnType("int");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IDProducto");

                    b.HasIndex("IDServicio");

                    b.ToTable("detalle");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<int>("IDDetalle")
                        .HasColumnType("int");

                    b.Property<int>("IDTrabajador")
                        .HasColumnType("int");

                    b.Property<float>("Iva")
                        .HasColumnType("real");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IDCliente");

                    b.HasIndex("IDDetalle");

                    b.HasIndex("IDTrabajador");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado_Marca")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre_Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("marca");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Producto", b =>
                {
                    b.Property<int>("Id_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Producto"));

                    b.Property<string>("Descripcion_Producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado_Producto")
                        .HasColumnType("bit");

                    b.Property<float>("Precio_Producto")
                        .HasColumnType("real");

                    b.Property<float>("Stock_Producto")
                        .HasColumnType("real");

                    b.HasKey("Id_Producto");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Servicio", b =>
                {
                    b.Property<int>("Id_Servicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Servicio"));

                    b.Property<string>("Descripcion_Servicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado_Producto")
                        .HasColumnType("bit");

                    b.Property<float>("Precio_Servicio")
                        .HasColumnType("real");

                    b.HasKey("Id_Servicio");

                    b.ToTable("servicio");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Trabajador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("trabajador");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanciaRecorrida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<int>("IDMarca")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeDistancia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDCliente");

                    b.HasIndex("IDMarca");

                    b.ToTable("vehiculo");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Detalle", b =>
                {
                    b.HasOne("FacturacionLabco.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturacionLabco.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IDServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Factura", b =>
                {
                    b.HasOne("FacturacionLabco.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturacionLabco.Models.Detalle", "Detalle")
                        .WithMany()
                        .HasForeignKey("IDDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturacionLabco.Models.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("IDTrabajador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Detalle");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("FacturacionLabco.Models.Vehiculo", b =>
                {
                    b.HasOne("FacturacionLabco.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturacionLabco.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("IDMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
